//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
// 

#include "node.h"

Define_Module(Node);

void Node::initialize()
{
    // TODO - Generated method body
    address=par("id");
        in=gate("gIn");
        out=gate("gOut");
        count_data=0;
        count_ack=0;
        if(address==1)
        {
            cMessage* event=new cMessage();
            scheduleAt(0,event);
        }
}

void Node::handleMessage(cMessage *msg)
{
    // TODO - Generated method body
    if(msg -> isSelfMessage()){     //if self msg recieved send packet to out
        N_PDU* M = new N_PDU("data");
      //initialize packet parameters
        M -> setPType(1);
        send(M,out);
    }
    else{
        N_PDU* M = check_and_cast<N_PDU*>(msg);
        int count;
        if(count<20){
            if(M -> getPType() == 1){
                N_PDU* data = new N_PDU("data");
                send(data,out);
            }
            else{
                N_PDU* ack = new N_PDU("ack");
                send(ack,out);
            }
         count++;
        }
    }
}
